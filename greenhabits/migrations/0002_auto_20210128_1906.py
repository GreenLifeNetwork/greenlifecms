# Generated by Django 3.0.11 on 2021-01-28 19:06

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.contrib.routable_page.models
import wagtail.core.fields


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
        ('greenhabits', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.RichTextField()),
                ('summary', models.CharField(help_text='The article summary', max_length=180)),
                ('links', wagtail.core.fields.RichTextField(blank=True, help_text='Possible links to follow up or support discussions')),
                ('reference', models.CharField(blank=True, help_text='If source is not link (like paper or archives)', max_length=250)),
                ('notes', models.TextField(blank=True, help_text='Notes about the quote. Useful for drafts and moderators. Not published.')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogPageIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True, default='Green Life articles')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
        migrations.RemoveField(
            model_name='greenhabitpage',
            name='header',
        ),
        migrations.RemoveField(
            model_name='greenhabitpage',
            name='link',
        ),
        migrations.RemoveField(
            model_name='greenhabitpage',
            name='summary',
        ),
        migrations.AddField(
            model_name='greenhabitpage',
            name='links',
            field=wagtail.core.fields.RichTextField(blank=True, help_text='Call to actions or details regarding suggestion'),
        ),
        migrations.AlterField(
            model_name='greenhabitpage',
            name='body',
            field=wagtail.core.fields.RichTextField(blank=True, help_text='The body is additional content for larger devices'),
        ),
        migrations.AlterField(
            model_name='greenhabitpage',
            name='importance',
            field=models.CharField(blank=True, choices=[('law', 'Law'), ('essential', 'Essential'), ('habit', 'Habit')], default='habit', max_length=20),
        ),
        migrations.AlterField(
            model_name='greenhabitpage',
            name='notes',
            field=models.TextField(blank=True, help_text='Notes about the quote. Useful for drafts and/or moderators comment. Not published.'),
        ),
        migrations.AlterField(
            model_name='greenhabitpage',
            name='reference',
            field=models.CharField(blank=True, help_text='If source is not link (like paper or archives)', max_length=250),
        ),
        migrations.AlterField(
            model_name='greenhabitpage',
            name='source',
            field=models.CharField(blank=True, help_text='Original author or source. If website or article. Use link field but only the domain name here! Seek approval of the owner before publishing', max_length=120),
        ),
        migrations.AlterField(
            model_name='greenhabitpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='Tags to mark the content. ie: energy, diet, household...', through='greenhabits.GreenHabitTagPage', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='BlogTagPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='greenhabits.BlogPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='greenhabits_blogtagpage_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='blogpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='Tags to mark the content. ie: energy, diet, household...', through='greenhabits.BlogTagPage', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
