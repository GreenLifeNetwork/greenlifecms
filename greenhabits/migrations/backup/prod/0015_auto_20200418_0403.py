# Generated by Django 2.2.6 on 2020-04-18 04:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.core.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailredirects', '0006_redirect_increase_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('taggit', '0002_auto_20150616_2121'),
        ('wagtailforms', '0003_capitalizeverbose'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('greenhabits', '0014_auto_20200418_0359'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.RichTextField()),
                ('summary', models.CharField(help_text='The article summary', max_length=180)),
                ('links', wagtail.core.fields.RichTextField(blank=True, help_text='Possible links to follow up or support discussions')),
                ('reference', models.CharField(blank=True, help_text='If source is not link (like paper or archives)', max_length=250)),
                ('notes', models.TextField(blank=True, help_text='Notes about the quote. Useful for drafts and moderators. Not published.')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogTagPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='greenhabits.BlogPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='greenhabits_blogtagpage_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RenameModel(
            old_name='GreenPageIndex',
            new_name='BlogPageIndex',
        ),
        migrations.RemoveField(
            model_name='greentagpage',
            name='content_object',
        ),
        migrations.RemoveField(
            model_name='greentagpage',
            name='tag',
        ),
        migrations.DeleteModel(
            name='GreenPage',
        ),
        migrations.DeleteModel(
            name='GreenTagPage',
        ),
        migrations.AddField(
            model_name='blogpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='Tags to mark the content. ie: energy, diet, household...', through='greenhabits.BlogTagPage', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
